/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/qGeHou6M0bM
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Formik } from "formik"
import { z } from 'zod';
import { toFormikValidationSchema } from 'zod-formik-adapter';

import { Button } from "./ui/button"
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "./ui/card"
import { Input } from "./ui/input"
import { Label } from "./ui/label"
import { useMutation } from "@tanstack/react-query";
import { useNavigate } from "@tanstack/react-router";
import { signInWithEmailAndPassword } from "firebase/auth";
import { auth } from '../utils/firebase'

const User = z.object ({
  email: z.string().email({message: "Email Inv√°lido"}),
  password: z.string().min(6, 'A senha deve conter mais de 6 caracteres')
})


export function LoginPage() {

  const navigate = useNavigate({ from: "/" });


  const { mutate: login } = useMutation({
    mutationFn: ({ email, password }: z.infer<typeof User>)=> {
         return signInWithEmailAndPassword(auth, email, password)
  },
  onSuccess: () => {
    navigate({to: './Dashboard.tsx'})
  }
    }
 
)
  return (
    <Formik 
      validationSchema={toFormikValidationSchema(User)}
      initialValues={{email: '', password: ''}}
      onSubmit={login}
    >    
    <Card className="w-full max-w-sm">
      <CardHeader>
        <CardTitle className="text-2xl">Login</CardTitle>
        <CardDescription>
          Enter your email below to login to your account.
        </CardDescription>
      </CardHeader>
      <CardContent className="grid gap-4">
        <div className="grid gap-2">
          <Label htmlFor="email">Email</Label>
          <Input id="email" type="email" placeholder="m@example.com" required />
        </div>
        <div className="grid gap-2">
          <Label htmlFor="password">Password</Label>
          <Input id="password" type="password" required />
        </div>
      </CardContent>
      <CardFooter>
        <Button className="w-full">Sign in</Button>
      </CardFooter>
    </Card>
    </Formik>
  )
}
